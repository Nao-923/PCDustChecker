[
    {
        "id": "7c7cc46b9539fb72",
        "type": "tab",
        "label": "フロー 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "229d5aa87957cc2e",
        "type": "http in",
        "z": "7c7cc46b9539fb72",
        "name": "GET /get-csv",
        "url": "/get-csv",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 380,
        "wires": [
            [
                "0a914b1301c7122a"
            ]
        ]
    },
    {
        "id": "0a914b1301c7122a",
        "type": "mongodb in",
        "z": "7c7cc46b9539fb72",
        "mongodb": "0f4b2eba613700a5",
        "name": "Read from MongoDB",
        "collection": "readings",
        "operation": "find",
        "x": 280,
        "y": 380,
        "wires": [
            [
                "ca053cf66c39b3b1"
            ]
        ]
    },
    {
        "id": "ca053cf66c39b3b1",
        "type": "function",
        "z": "7c7cc46b9539fb72",
        "name": "Convert to CSV",
        "func": "function convertToCSV(data) {\n    if (data.length === 0) return '';\n\n    const headers = Object.keys(data[0]);\n    const csvRows = [];\n\n    // Add headers\n    csvRows.push(headers.join(','));\n\n    // Add data\n    for (const row of data) {\n        const values = headers.map(header => {\n            const val = row[header];\n            return `\"${val}\"`; // Wrap in quotes to handle commas in data\n        });\n        csvRows.push(values.join(','));\n    }\n\n    return csvRows.join('\\n');\n}\n\nmsg.payload = convertToCSV(msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 380,
        "wires": [
            [
                "6d29e2caf9fb5092"
            ]
        ]
    },
    {
        "id": "6d29e2caf9fb5092",
        "type": "function",
        "z": "7c7cc46b9539fb72",
        "name": "Set Headers",
        "func": "msg.headers = {\n    'Content-Type': 'text/csv',\n    'Content-Disposition': 'attachment; filename=sensor_data.csv'\n};\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 380,
        "wires": [
            [
                "ea9b17b3c5c2e61a"
            ]
        ]
    },
    {
        "id": "ea9b17b3c5c2e61a",
        "type": "http response",
        "z": "7c7cc46b9539fb72",
        "name": "Send CSV",
        "statusCode": "",
        "headers": {},
        "x": 880,
        "y": 380,
        "wires": []
    },
    {
        "id": "5ab4c7183347815f",
        "type": "mqtt in",
        "z": "7c7cc46b9539fb72",
        "name": "MQTT入力",
        "topic": "/dust",
        "qos": "2",
        "datatype": "json",
        "broker": "4377a21b30155735",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 80,
        "y": 220,
        "wires": [
            [
                "7571dc75b83b3bf2",
                "db149d9625c09b7b"
            ]
        ]
    },
    {
        "id": "7d79b2d92d95dfe3",
        "type": "aedes broker",
        "z": "7c7cc46b9539fb72",
        "name": "MQTTブローカー",
        "mqtt_port": 1883,
        "mqtt_ws_bind": "port",
        "mqtt_ws_port": "",
        "mqtt_ws_path": "",
        "cert": "",
        "key": "",
        "certname": "",
        "keyname": "",
        "persistence_bind": "memory",
        "dburl": "",
        "usetls": false,
        "x": 100,
        "y": 160,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "7571dc75b83b3bf2",
        "type": "change",
        "z": "7c7cc46b9539fb72",
        "name": "データ抽出",
        "rules": [
            {
                "t": "move",
                "p": "payload.Ratio",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 220,
        "wires": [
            [
                "746c0d3f348cae31",
                "5b60f2e5a46c9cf5",
                "e485fbecfa3b3ad1"
            ]
        ]
    },
    {
        "id": "db149d9625c09b7b",
        "type": "mongodb out",
        "z": "7c7cc46b9539fb72",
        "mongodb": "0f4b2eba613700a5",
        "name": "MongoDB挿入",
        "collection": "readings",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 320,
        "y": 300,
        "wires": []
    },
    {
        "id": "746c0d3f348cae31",
        "type": "debug",
        "z": "7c7cc46b9539fb72",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 220,
        "wires": []
    },
    {
        "id": "5b60f2e5a46c9cf5",
        "type": "mqtt out",
        "z": "7c7cc46b9539fb72",
        "name": "",
        "topic": "/screen",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "4377a21b30155735",
        "x": 570,
        "y": 160,
        "wires": []
    },
    {
        "id": "5f91b39ffdfe5eca",
        "type": "ui_chart",
        "z": "7c7cc46b9539fb72",
        "name": "",
        "group": "d382f88ba25b088f",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Dust Sensor Ratio",
        "chartType": "line",
        "legend": "false",
        "xformat": "auto",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 880,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "e485fbecfa3b3ad1",
        "type": "function",
        "z": "7c7cc46b9539fb72",
        "name": "フォーマット for チャート",
        "func": "msg.payload = {\n    x: new Date(),\n    y: msg.payload\n};\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 100,
        "wires": [
            [
                "5f91b39ffdfe5eca",
                "cc95a77db2f5643a"
            ]
        ]
    },
    {
        "id": "cc95a77db2f5643a",
        "type": "debug",
        "z": "7c7cc46b9539fb72",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 140,
        "wires": []
    },
    {
        "id": "0f4b2eba613700a5",
        "type": "mongodb",
        "hostname": "172.18.0.2",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "DustSensorData",
        "name": ""
    },
    {
        "id": "4377a21b30155735",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "d382f88ba25b088f",
        "type": "ui_group",
        "name": "デフォルト",
        "tab": "cecbf2f0f2f491ee",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "cecbf2f0f2f491ee",
        "type": "ui_tab",
        "name": "ホーム",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]